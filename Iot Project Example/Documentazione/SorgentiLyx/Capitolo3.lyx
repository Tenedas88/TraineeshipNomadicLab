#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass book
\begin_preamble
\usepackage{listings,xcolor,courier,bookmark}
\usepackage{listingsutf8}
\definecolor{darkblue}{named}{blue}
\definecolor{darkred}{named}{red}
\definecolor{grau}{named}{gray}
\let\Righttorque\relax
\lstset{
captionpos=b,
commentstyle=\color[rgb]{0.133,0.545,0.133},
keywordstyle=\color{darkblue},
stringstyle=\color{darkred},
extendedchars=true,
basicstyle=\small\ttfamily,
showstringspaces=false,
tabsize=2,
numbers=left,
numberstyle=\tiny,
breakautoindent  = true,
breakindent      = 2em,
breaklines       = true,
postbreak        = ,
prebreak         = \raisebox{-.8ex}[0ex][0ex]{\Righttorque},
showspaces=false, 
showtabs=false, 
showstringspaces=false,
language=VHDL,
frame=single,
morecomment=[s]{--}
}


\renewcommand*{\lstlistingname}{Codice Componente}


\usepackage{fancyhdr}
\pagestyle{fancy}

\fancyhead{} 
\fancyfoot{} 

\fancyhead[RO,LE]{\bfseries \leftmark}
\fancyfoot[LE,RO]{\thepage}
\fancyfoot[LO,CE]{Tesina in ASE: Architetture dei Sistemi di Elaborazione}
\renewcommand{\headrulewidth}{0.4pt}
\renewcommand{\footrulewidth}{0.4pt}

\date{}
\cfoot{}
\usepackage{eso-pic,graphicx}
\makeatletter
\newcommand\BackgroundPicture[2]{
\setlength{\unitlength}{1pt}
\put(0,\strip@pt\paperheight){
\parbox[t][\paperheight]{\paperwidth}{
\vfill
\centering\includegraphics[angle=#2]{#1}
\vfill
}
}
}
\makeatother
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language italian
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family rmdefault
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 2.5cm
\rightmargin 2cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard

\lang american
\begin_inset Note Note
status open

\begin_layout Plain Layout
Utilizzare questo file per generare il pdf completo
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\lang american
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
AddToShipoutPicture{
\backslash
BackgroundPicture{logo.png}{0}}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Overview del Sistema
\end_layout

\begin_layout Standard
Di seguito è rappresentata informalmente l'architettura del sistema.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename Immagini/Overview.PNG
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Vista Architetturale: Panoramica
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Descrizione
\end_layout

\begin_layout Standard
Le componenti del sistema implementato sono due.
 
\end_layout

\begin_layout Itemize

\series bold
Il server
\series default
, che sarà installato all'interno dell'abitazione e si occuperà della comunicazi
one con i device presenti (COAP) e della comunicazione con l'app mobile.
\end_layout

\begin_layout Itemize

\series bold
L'app mobile
\series default
, che fornisce un'interfaccia per l'utente e permette di interagire da remoto
 (HTTP) con il server.
 
\end_layout

\begin_layout Section
Vista architetturale - alto livello
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename Immagini/Vista architetturale.PNG
	scale 70

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Vista Architetturale: Alto Livello
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Descrizione
\end_layout

\begin_layout Standard
Piu nel dettaglio, i componenti fondamentali del sistema sono i seguenti:
\end_layout

\begin_layout Itemize

\series bold
Client application
\series default
, ossia l'app mobile.
\end_layout

\begin_layout Itemize

\series bold
Server Centrale
\series default
, composto fondamentalmente da:
\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
Web Server
\series default
: è il server che comunica con l'applicazione tramite API RESTful ed implementa
 la logica utente tramite delle apposite servlet, che si occupano di gestire
 le richieste dell'utente.
\end_layout

\begin_layout Itemize

\series bold
LightWeightMachine2Machine Server
\series default
: è il server che implementa lo stack 
\series bold
OMA LWM2M 
\series default
e 
\series bold
COAP 
\series default
per la comunicazione coi device.
\end_layout

\end_deeper
\begin_layout Section
Module View - Server Centrale
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename Immagini/Module View Server Centrale.PNG
	scale 70

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Diagramma dei Moduli
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Descrizione
\end_layout

\begin_layout Standard
Scendendo nel dettaglio, nel server centrale sono stati identificati i seguenti
 moduli software:
\end_layout

\begin_layout Itemize

\series bold
Jetty web server
\series default
: implementazione di web server.
\end_layout

\begin_layout Itemize

\series bold
LwM2m Server by Leshan
\series default
: è un server Lwm2m implementato utilizzando la libreria 
\series bold
Leshan
\series default
 (vedi appendice A)
\end_layout

\begin_layout Itemize

\series bold
Servlets
\series default
: in questo modulo sono contenute le servlet che si occupano della gestione
 delle richieste da parte del client, nonchè dell'invio di push notification
 da parte del web server verso il client.
\end_layout

\begin_layout Itemize

\series bold
Model
\series default
: modulo che contiene il modello dei dati, ossia Regole e Condizioni.
\end_layout

\begin_layout Itemize

\series bold
Rule Managers
\series default
: contiene la classe astratta 
\series bold
Rule Engine
\series default
 e le sue specializzazioni che si occupano di gestire le regole salvate
 persistentemente e quelle impostate a runtime dall'utente
\end_layout

\begin_layout Itemize

\series bold
DBManager
\series default
: classe che astrae l'accesso al database
\end_layout

\begin_layout Itemize

\series bold
DB:
\series default
 Mysql database per la conservazione di regole.
\end_layout

\begin_layout Section
Module View - MobileApp
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename Immagini/Module view MobileApp.JPG
	scale 50

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Diagramma dei Moduli
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Descrizione
\end_layout

\begin_layout Standard
Le pagine navigabili dell'applicazione sono:
\end_layout

\begin_layout Itemize

\series bold
home.html
\series default
: utilizza il servizio 
\series bold
ServerCom
\series default
 per richiedere tramite Http Get la lista degli endpoint connessi
\end_layout

\begin_layout Itemize

\series bold
device-detail.html: 
\series default
visualizza i dettagli dell'endpoint selezionato in 
\series bold
home.html 
\end_layout

\begin_layout Itemize

\series bold
resource-detail.html: 
\series default
visualizza le risorse associate ad un oggetto IPSO associato ad un dispositivo
 selezionato tramite 
\series bold
device-detail.html 
\series default
e la cui descrizione viene richiesta al servizio 
\series bold
ServerCom 
\end_layout

\begin_layout Itemize

\series bold
rule-page.html: 
\series default
utilizza il servizio 
\series bold
ServerCom
\series default
 per richiedere tramite HttpGet la lista delle regole attive sul server,
 permette tramite un bottone di inviare regole nuove al server tramite 
\series bold
ServerCom
\series default
 con il metodo Http Post
\end_layout

\begin_layout Itemize

\series bold
rule-detail.html: 
\series default
visualizza i dettagli relativi ad una singola regola, selezionata da 
\series bold
rule-page.html
\series default
 e permette di navigare verso 
\series bold
device-detail.html
\series default
 per visualizzare i dettagli delle risorse coinvolte
\end_layout

\begin_layout Standard
Ad ognuna di queste pagine html sono associati un componente ed un modulo
 angular 2.
\end_layout

\begin_layout Standard
Il componente radice app.component.ts si preoccupa di realizzare il menu da
 cui è possibile navigare verso le due pagine 
\series bold
home.html
\series default
 e 
\series bold
rule-page.html
\end_layout

\begin_layout Section
Vista Architetturale - Connettori
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename Immagini/Connettori.PNG
	scale 50

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Diagramma dei Moduli
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Descrizione
\end_layout

\begin_layout Standard
Questa vista a componenti e connettori indica come i diversi componenti
 dell’architettura comunicano tra di loro e quali tipi di connettori utilizzano
 per tale comunicazione.
\end_layout

\begin_layout Standard
In particolare sono stati individuati tre pattern di comunicazione: 
\end_layout

\begin_layout Itemize

\series bold
Call/Return
\series default
: tale tipo di comunicazione (sostanzialmente chiamata a funzione, quindi
 invocazione di metodi) è utilizzato dai componenti intra-server centrale
 per comunicare tra di loro.
\end_layout

\begin_layout Itemize

\series bold
Client/Server
\series default
: utilizzato per la comunicazione tra :
\end_layout

\begin_deeper
\begin_layout Itemize
l'app mobile e il web server.
 Implementato tramite protocollo 
\series bold
HTTP.
\end_layout

\begin_layout Itemize
i device e il lwm2m server.
 Implementato tramite protocollo 
\series bold
COAP.
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Asyncronous Messaging
\series default
: Il web server utilizza questo pattern per inviare notifiche al client
 in seguito a qualche evento particolare.
 Imlementato tramite la specifica 
\series bold
Event Source.
 NB: è prevista la migrazione a WebSocket dati i problemi riscontrati con
 EventSource.
\end_layout

\begin_layout Itemize

\series bold
Data Reading and Writing
\series default
: Connettore utilizzato da un componente Data Accessor per richiedere i
 dati forniti da un componente di tipo Repository .
 Il nome del connettore specifica la tecnologia utilizzata.
 Nel caso specifico, la comunicazione col DB avviene tramite JDBC.
\end_layout

\end_body
\end_document
